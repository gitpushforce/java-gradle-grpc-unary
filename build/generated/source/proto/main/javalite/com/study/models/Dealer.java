// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: person.proto

package com.study.models;

/**
 * Protobuf type {@code Dealer}
 */
public  final class Dealer extends
    com.google.protobuf.GeneratedMessageLite<
        Dealer, Dealer.Builder> implements
    // @@protoc_insertion_point(message_implements:Dealer)
    DealerOrBuilder {
  private Dealer() {
  }
  public static final int MODEL_FIELD_NUMBER = 1;
  private static final class ModelDefaultEntryHolder {
    static final com.google.protobuf.MapEntryLite<
        java.lang.Integer, com.study.models.Car> defaultEntry =
            com.google.protobuf.MapEntryLite
            .<java.lang.Integer, com.study.models.Car>newDefaultInstance(
                com.google.protobuf.WireFormat.FieldType.INT32,
                0,
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.study.models.Car.getDefaultInstance());
  }
  private com.google.protobuf.MapFieldLite<
      java.lang.Integer, com.study.models.Car> model_ =
          com.google.protobuf.MapFieldLite.emptyMapField();
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.study.models.Car>
  internalGetModel() {
    return model_;
  }
  private com.google.protobuf.MapFieldLite<java.lang.Integer, com.study.models.Car>
  internalGetMutableModel() {
    if (!model_.isMutable()) {
      model_ = model_.mutableCopy();
    }
    return model_;
  }

  public int getModelCount() {
    return internalGetModel().size();
  }
  /**
   * <code>map&lt;int32, .Car&gt; model = 1;</code>
   */

  public boolean containsModel(
      int key) {
    
    return internalGetModel().containsKey(key);
  }
  /**
   * Use {@link #getModelMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.Integer, com.study.models.Car> getModel() {
    return getModelMap();
  }
  /**
   * <code>map&lt;int32, .Car&gt; model = 1;</code>
   */

  public java.util.Map<java.lang.Integer, com.study.models.Car> getModelMap() {
    return java.util.Collections.unmodifiableMap(
        internalGetModel());
  }
  /**
   * <code>map&lt;int32, .Car&gt; model = 1;</code>
   */

  public com.study.models.Car getModelOrDefault(
      int key,
      com.study.models.Car defaultValue) {
    
    java.util.Map<java.lang.Integer, com.study.models.Car> map =
        internalGetModel();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;int32, .Car&gt; model = 1;</code>
   */

  public com.study.models.Car getModelOrThrow(
      int key) {
    
    java.util.Map<java.lang.Integer, com.study.models.Car> map =
        internalGetModel();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }
  /**
   * <code>map&lt;int32, .Car&gt; model = 1;</code>
   */
  private java.util.Map<java.lang.Integer, com.study.models.Car>
  getMutableModelMap() {
    return internalGetMutableModel();
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (java.util.Map.Entry<java.lang.Integer, com.study.models.Car> entry
         : internalGetModel().entrySet()) {
      ModelDefaultEntryHolder.defaultEntry.serializeTo(
          output, 1, entry.getKey(), entry.getValue());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.Integer, com.study.models.Car> entry
         : internalGetModel().entrySet()) {
      size += ModelDefaultEntryHolder.defaultEntry.computeMessageSize(
        1, entry.getKey(), entry.getValue());
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static com.study.models.Dealer parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.study.models.Dealer parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.study.models.Dealer parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.study.models.Dealer parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.study.models.Dealer parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.study.models.Dealer parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.study.models.Dealer parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static com.study.models.Dealer parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.study.models.Dealer parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.study.models.Dealer parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.study.models.Dealer prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code Dealer}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.study.models.Dealer, Builder> implements
      // @@protoc_insertion_point(builder_implements:Dealer)
      com.study.models.DealerOrBuilder {
    // Construct using com.study.models.Dealer.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }



    public int getModelCount() {
      return instance.getModelMap().size();
    }
    /**
     * <code>map&lt;int32, .Car&gt; model = 1;</code>
     */

    public boolean containsModel(
        int key) {
      
      return instance.getModelMap().containsKey(key);
    }

    public Builder clearModel() {
      copyOnWrite();
      instance.getMutableModelMap().clear();
      return this;
    }
    /**
     * <code>map&lt;int32, .Car&gt; model = 1;</code>
     */

    public Builder removeModel(
        int key) {
      
      copyOnWrite();
      instance.getMutableModelMap().remove(key);
      return this;
    }
    /**
     * Use {@link #getModelMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, com.study.models.Car> getModel() {
      return getModelMap();
    }
    /**
     * <code>map&lt;int32, .Car&gt; model = 1;</code>
     */
    public java.util.Map<java.lang.Integer, com.study.models.Car> getModelMap() {
      return java.util.Collections.unmodifiableMap(
          instance.getModelMap());
    }
    /**
     * <code>map&lt;int32, .Car&gt; model = 1;</code>
     */

    public com.study.models.Car getModelOrDefault(
        int key,
        com.study.models.Car defaultValue) {
      
      java.util.Map<java.lang.Integer, com.study.models.Car> map =
          instance.getModelMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;int32, .Car&gt; model = 1;</code>
     */

    public com.study.models.Car getModelOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, com.study.models.Car> map =
          instance.getModelMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }
    /**
     * <code>map&lt;int32, .Car&gt; model = 1;</code>
     */
    public Builder putModel(
        int key,
        com.study.models.Car value) {
      
      if (value == null) { throw new java.lang.NullPointerException(); }
      copyOnWrite();
      instance.getMutableModelMap().put(key, value);
      return this;
    }
    /**
     * <code>map&lt;int32, .Car&gt; model = 1;</code>
     */
    public Builder putAllModel(
        java.util.Map<java.lang.Integer, com.study.models.Car> values) {
      copyOnWrite();
      instance.getMutableModelMap().putAll(values);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:Dealer)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.study.models.Dealer();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        model_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        com.study.models.Dealer other = (com.study.models.Dealer) arg1;
        model_ = visitor.visitMap(
            model_, other.internalGetModel());
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!model_.isMutable()) {
                  model_ = model_.mutableCopy();
                }
                ModelDefaultEntryHolder.defaultEntry.parseInto(model_, input, extensionRegistry);  break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (com.study.models.Dealer.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:Dealer)
  private static final com.study.models.Dealer DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new Dealer();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static com.study.models.Dealer getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Dealer> PARSER;

  public static com.google.protobuf.Parser<Dealer> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

